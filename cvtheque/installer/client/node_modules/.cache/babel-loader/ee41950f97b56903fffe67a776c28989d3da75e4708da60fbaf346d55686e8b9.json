{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*!\n * Built by Revolist\n */\nimport { proxyCustomElement, HTMLElement, createEvent } from '@stencil/core/internal/client';\nconst Clipboard = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.copyRegion = createEvent(this, \"copyRegion\", 3);\n    this.pasteRegion = createEvent(this, \"pasteRegion\", 3);\n  }\n  onPaste(e) {\n    const clipboardData = this.getData(e);\n    const isHTML = clipboardData.types.indexOf('text/html') > -1;\n    const data = isHTML ? clipboardData.getData('text/html') : clipboardData.getData('text');\n    const parsedData = isHTML ? this.htmlParse(data) : this.textParse(data);\n    this.pasteRegion.emit(parsedData);\n    e.preventDefault();\n  }\n  copyStarted(e) {\n    this.copyRegion.emit(this.getData(e));\n    e.preventDefault();\n  }\n  async doCopy(e, data) {\n    e.setData('text/plain', data ? this.parserCopy(data) : '');\n  }\n  parserCopy(data) {\n    return data.map(rgRow => rgRow.join('\\t')).join('\\n');\n  }\n  textParse(data) {\n    const result = [];\n    const rows = data.split(/\\r\\n|\\n|\\r/);\n    for (let y in rows) {\n      result.push(rows[y].split('\\t'));\n    }\n    return result;\n  }\n  htmlParse(data) {\n    const result = [];\n    const table = document.createRange().createContextualFragment(data).querySelector('table');\n    for (const rgRow of Array.from(table.rows)) {\n      result.push(Array.from(rgRow.cells).map(cell => cell.innerText));\n    }\n    return result;\n  }\n  getData(e) {\n    var _a;\n    return e.clipboardData || ((_a = window) === null || _a === void 0 ? void 0 : _a.clipboardData);\n  }\n}, [0, \"revogr-clipboard\", {\n  \"doCopy\": [64]\n}, [[4, \"paste\", \"onPaste\"], [4, \"copy\", \"copyStarted\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"revogr-clipboard\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"revogr-clipboard\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Clipboard);\n        }\n        break;\n    }\n  });\n}\ndefineCustomElement$1();\nconst RevogrClipboard = Clipboard;\nconst defineCustomElement = defineCustomElement$1;\nexport { RevogrClipboard, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}