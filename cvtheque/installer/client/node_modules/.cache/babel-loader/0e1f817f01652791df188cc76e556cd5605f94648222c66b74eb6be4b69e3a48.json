{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, normalizeClass as _normalizeClass, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fac551a2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-installer-steps\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_icon = _resolveComponent(\"oxd-icon\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  return _openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.steps, (step, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: step,\n      class: _normalizeClass({\n        'orangehrm-installer-steps-item': true,\n        '--active': $props.currentStep === index\n      })\n    }, [_createVNode(_component_oxd_text, {\n      tag: \"span\",\n      class: _normalizeClass({\n        'orangehrm-installer-steps-count': true,\n        '--success': $props.currentStep > index\n      })\n    }, {\n      default: _withCtx(() => [$props.currentStep <= index ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createBlock(_component_oxd_icon, {\n        key: 1,\n        class: \"orangehrm-installer-steps-icon\",\n        name: \"check\"\n      }))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\"]), _createVNode(_component_oxd_text, {\n      tag: \"span\",\n      class: \"orangehrm-installer-steps-name\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(step), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}