{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t(require(\"vue\"), require(\"@revolist/revogrid/custom-element/\")) : \"function\" == typeof define && define.amd ? define(\"VGrid\", [\"vue\", \"@revolist/revogrid/custom-element/\"], t) : \"object\" == typeof exports ? exports.VGrid = t(require(\"vue\"), require(\"@revolist/revogrid/custom-element/\")) : e.VGrid = t(e.vue, e[\"@revolist/revogrid/custom-element/\"]);\n}(self, (e, t) => (() => {\n  \"use strict\";\n\n  var r = {\n      863: e => {\n        e.exports = t;\n      },\n      748: t => {\n        t.exports = e;\n      }\n    },\n    o = {};\n  function n(e) {\n    var t = o[e];\n    if (void 0 !== t) return t.exports;\n    var s = o[e] = {\n      exports: {}\n    };\n    return r[e](s, s.exports, n), s.exports;\n  }\n  n.d = (e, t) => {\n    for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {\n      enumerable: !0,\n      get: t[r]\n    });\n  }, n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.r = e => {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  };\n  var s = {};\n  return (() => {\n    n.r(s), n.d(s, {\n      VGrid: () => f,\n      VGridPlugin: () => v,\n      VGridVueEditor: () => g,\n      VGridVueTemplate: () => m,\n      VGridVueTemplateConstructor: () => b,\n      default: () => h\n    });\n    var e = n(748);\n    const t = \"update:modelValue\",\n      r = Symbol(),\n      o = {\n        default: r\n      },\n      i = e => (null == e ? void 0 : e.split(\" \")) || [],\n      l = (e, t, r = []) => {\n        var o;\n        return [...Array.from((null === (o = e.value) || void 0 === o ? void 0 : o.classList) || []), ...r].filter((e, r, o) => !t.has(e) && o.indexOf(e) === r);\n      },\n      a = (n, s, a = [], u, d, c) => {\n        void 0 !== s && s();\n        const f = (0, e.defineComponent)((o, {\n          attrs: s,\n          slots: a,\n          emit: f\n        }) => {\n          var p;\n          let v = o[u];\n          const m = (0, e.ref)(),\n            b = new Set(i(s.class)),\n            g = e => {\n              e.el && (Array.isArray(d) ? d : [d]).forEach(r => {\n                e.el.addEventListener(r.toLowerCase(), e => {\n                  v = (null == e ? void 0 : e.target)[u], f(t, v), c && f(c, e);\n                });\n              });\n            },\n            h = (0, e.getCurrentInstance)(),\n            y = (null === (p = null == h ? void 0 : h.appContext) || void 0 === p ? void 0 : p.provides.navManager) ? (0, e.inject)(\"navManager\") : void 0;\n          return () => {\n            v = o[u], i(s.class).forEach(e => {\n              b.add(e);\n            });\n            const t = o.onClick;\n            let c = {\n              ref: m,\n              class: l(m, b),\n              onClick: e => {\n                void 0 !== t && t(e), e.defaultPrevented || (e => {\n                  const {\n                    routerLink: t\n                  } = o;\n                  if (t !== r) if (void 0 !== y) {\n                    let t = {\n                      event: e\n                    };\n                    for (const e in o) {\n                      const n = o[e];\n                      o.hasOwnProperty(e) && e.startsWith(\"router\") && n !== r && (t[e] = n);\n                    }\n                    y.navigate(t);\n                  } else console.warn(\"Tried to navigate, but no router was found. Make sure you have mounted Vue Router.\");\n                })(e);\n              },\n              onVnodeBeforeMount: d ? g : void 0\n            };\n            for (const e in o) {\n              const t = o[e];\n              o.hasOwnProperty(e) && t !== r && (c[e] = t);\n            }\n            return u && (o.modelValue !== r ? c = Object.assign(Object.assign({}, c), {\n              [u]: o.modelValue\n            }) : v !== r && (c = Object.assign(Object.assign({}, c), {\n              [u]: v\n            }))), (0, e.h)(n, c, a.default && a.default());\n          };\n        });\n        return f.displayName = n, f.props = {\n          routerLink: o\n        }, a.forEach(e => {\n          f.props[e] = o;\n        }), u && (f.props.modelValue = o, f.emits = [t, c]), f;\n      };\n    n(863);\n    const u = a(\"revo-grid\", void 0, [\"rowHeaders\", \"frameSize\", \"rowSize\", \"colSize\", \"range\", \"readonly\", \"resize\", \"canFocus\", \"useClipboard\", \"columns\", \"source\", \"pinnedTopSource\", \"pinnedBottomSource\", \"rowDefinitions\", \"editors\", \"plugins\", \"columnTypes\", \"theme\", \"rowClass\", \"autoSizeColumn\", \"filter\", \"canMoveColumns\", \"trimmedRows\", \"exporting\", \"grouping\", \"stretch\", \"beforeedit\", \"beforerangeedit\", \"afteredit\", \"beforeautofill\", \"beforeaange\", \"afterfocus\", \"roworderchanged\", \"beforesourcesortingapply\", \"beforesortingapply\", \"beforesorting\", \"rowdragstart\", \"headerclick\", \"beforecellfocus\", \"beforefocuslost\", \"beforesourceset\", \"aftersourceset\", \"beforecolumnsset\", \"beforecolumnapplied\", \"aftercolumnsset\", \"beforefilterapply\", \"beforefiltertrimmed\", \"beforetrimmed\", \"aftertrimmed\", \"viewportscroll\", \"beforeexport\", \"beforeeditstart\", \"aftercolumnresize\"]),\n      d = (t, r, o, n) => {\n        if (!r) return null;\n        let s = r._vnode;\n        if (s) {\n          n && (s.appContext = n);\n          for (const e in o) s.component.props[e] = o[e];\n        } else s = (0, e.createVNode)(t, o), n && (s.appContext = n), (0, e.render)(s, r);\n        return {\n          vueInstance: s,\n          destroy: () => (0, e.render)(null, r),\n          el: r\n        };\n      };\n    class c {\n      constructor(e, t, r, o, n) {\n        this.VueEditorConstructor = e, this.column = t, this.save = r, this.close = o, this.appContext = n, this.element = null, this.editCell = null;\n      }\n      componentDidRender() {}\n      disconnectedCallback() {\n        this.vueEl && (this.vueEl.destroy(), this.vueEl = void 0);\n      }\n      render(e) {\n        return e(\"span\", {\n          ref: e => {\n            this.vueEl = d(this.VueEditorConstructor, e, Object.assign(Object.assign({}, this.editCell), {\n              column: this.column,\n              save: this.save,\n              close: this.close\n            }), this.appContext);\n          }\n        });\n      }\n    }\n    const f = u;\n    let p = !1;\n    const v = {\n        install(e) {\n          p || (p = !0, e.component(\"vue-data-grid\", f));\n        }\n      },\n      m = t => {\n        const r = (0, e.getCurrentInstance)(),\n          o = null == r ? void 0 : r.appContext;\n        return (e, r) => e(\"span\", {\n          ref: e => d(t, e, r, o)\n        });\n      },\n      b = d,\n      g = t => {\n        const r = (0, e.getCurrentInstance)(),\n          o = null == r ? void 0 : r.appContext;\n        return function (e, r, n) {\n          return new c(t, e, r, n, o);\n        };\n      },\n      h = u;\n  })(), s;\n})());","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}