{"ast":null,"code":"import { required, validRange } from '@/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@/core/util/helper/navigation.ts';\nimport Notice from '@/components/Notice.vue';\nexport default {\n  name: 'DatabaseConfigScreen',\n  components: {\n    Notice\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/upgrader/api/database-config');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      rules: {\n        dbHost: [required],\n        dbPort: [required, validRange(5, 0, 65535)],\n        dbName: [required],\n        dbUser: [required]\n      },\n      isLoading: false,\n      database: {\n        dbHost: null,\n        dbPort: null,\n        dbName: null,\n        dbUser: null,\n        dbPassword: null\n      },\n      errorMessage: ''\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      this.database = {\n        ...data,\n        dbPassword: null\n      };\n      if (!this.database.dbPort) {\n        this.database.dbPort = 3306;\n      }\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSubmit() {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.http.create({\n        ...this.database\n      }).then(() => {\n        navigate('/upgrader/system-check');\n      }).catch(({\n        response\n      }) => {\n        const {\n          error\n        } = response.data;\n        this.errorMessage = error?.message ?? error;\n        this.isLoading = false;\n      });\n    },\n    navigateUrl() {\n      navigate('/welcome');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}