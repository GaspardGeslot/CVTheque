{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { navigate } from '@/core/util/helper/navigation';\nexport default {\n  name: 'InstanceCreation',\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/installer/api/instance');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      instance: {\n        organizationName: null,\n        countryCode: null,\n        langCode: null,\n        timezone: null\n      },\n      countryList: [],\n      languageList: [],\n      timezoneList: [],\n      rules: {\n        organizationName: [required, shouldNotExceedCharLength(100)],\n        countryCode: [required]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.request({\n      method: 'GET',\n      url: 'installer/api/countries'\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      data.sort((a, b) => a.label > b.label ? 1 : -1);\n      this.countryList = data;\n      return this.http.request({\n        method: 'GET',\n        url: 'installer/api/languages'\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.languageList = data;\n      return this.http.request({\n        method: 'GET',\n        url: 'installer/api/timezones'\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.timezoneList = data;\n      return this.http.getAll();\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.instance = {\n        ...this.instance,\n        ...data\n      };\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSubmit() {\n      this.http.create({\n        organizationName: this.instance.organizationName,\n        countryCode: this.instance.countryCode.id,\n        langCode: this.instance.langCode?.id,\n        timezone: this.instance.timezone?.id\n      }).then(() => {\n        navigate('/installer/admin-user-creation');\n      });\n    },\n    navigateUrl() {\n      navigate('/installer/system-check');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}